/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 14 18:09:47 GMT 2020
 */

package main.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import main.java.CarroGasolina;
import main.java.Coordinate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CarroGasolina_ESTest extends CarroGasolina_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      String string0 = carroGasolina0.toString();
      assertEquals("***** Carro a Gasolina *****\n*****    VE\u00CDCULO    *****\nMarca: \nMatr\u00EDcula: \nNIF do Propriet\u00E1rio: \nVelocidade M\u00E9dia: 0\nPre\u00E7o Base por Km: 0.0\nConsumo: 0.0\nAutonomia: 0\nPosi\u00E7\u00E3o (latitude e longitude): 0, 0\nDispon\u00EDvel: false\nClassifica\u00E7\u00E3o: 0\n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      carroGasolina0.setConsumo((-3886.432176685));
      CarroGasolina carroGasolina1 = carroGasolina0.clone();
      assertNotSame(carroGasolina0, carroGasolina1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      carroGasolina0.setClassificacao(232);
      CarroGasolina carroGasolina1 = carroGasolina0.clone();
      assertEquals(0, carroGasolina1.getAutonomia());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Coordinate coordinate0 = mock(Coordinate.class, new ViolatedAssumptionAnswer());
      doReturn("t;p").when(coordinate0).toString();
      CarroGasolina carroGasolina0 = new CarroGasolina("t;p", "t;p", "t;p", 0, 0, 0, 0, coordinate0, false);
      CarroGasolina carroGasolina1 = carroGasolina0.clone();
      assertEquals("t;p", carroGasolina1.getMatricula());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina("", "", "", 1457, 1457, 1.0, (-1957), (Coordinate) null, false);
      CarroGasolina carroGasolina1 = carroGasolina0.clone();
      assertNotSame(carroGasolina1, carroGasolina0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Coordinate coordinate0 = mock(Coordinate.class, new ViolatedAssumptionAnswer());
      CarroGasolina carroGasolina0 = new CarroGasolina((String) null, "", "", (-1387), (-1387), (-1387), (-1387), coordinate0, false);
      CarroGasolina carroGasolina1 = new CarroGasolina(carroGasolina0);
      // Undeclared exception!
      try { 
        carroGasolina0.equals(carroGasolina1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.Veiculo", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CarroGasolina carroGasolina0 = null;
      try {
        carroGasolina0 = new CarroGasolina((CarroGasolina) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.Veiculo", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Coordinate coordinate0 = mock(Coordinate.class, new ViolatedAssumptionAnswer());
      CarroGasolina carroGasolina0 = new CarroGasolina("t;p", "t;p", "t;p", 0, 0, 0, 0, coordinate0, false);
      CarroGasolina carroGasolina1 = new CarroGasolina(carroGasolina0);
      boolean boolean0 = carroGasolina0.equals(carroGasolina1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Coordinate coordinate0 = mock(Coordinate.class, new ViolatedAssumptionAnswer());
      CarroGasolina carroGasolina0 = new CarroGasolina("t;p", "t;p", "t;p", 0, 0, 0, 0, coordinate0, false);
      boolean boolean0 = carroGasolina0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Coordinate coordinate0 = mock(Coordinate.class, new ViolatedAssumptionAnswer());
      CarroGasolina carroGasolina0 = new CarroGasolina("t;p", "t;p", "t;p", 0, 0, 0, 0, coordinate0, false);
      boolean boolean0 = carroGasolina0.equals(carroGasolina0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Coordinate coordinate0 = mock(Coordinate.class, new ViolatedAssumptionAnswer());
      CarroGasolina carroGasolina0 = new CarroGasolina("t;p", "t;p", "t;p", 0, 0, 0, 0, coordinate0, false);
      boolean boolean0 = carroGasolina0.equals("t;p");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      carroGasolina0.setClassificacao((-1927));
      CarroGasolina carroGasolina1 = carroGasolina0.clone();
      assertNotSame(carroGasolina1, carroGasolina0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina("_h5$ss", "ZZ4a:L@u?2]#", "ZZ4a:L@u?2]#", (-1263), (-1263), 0.0, 4292, (Coordinate) null, true);
      carroGasolina0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina("_h5$ss", "ZZ4a:L@u?2]#", "ZZ4a:L@u?2]#", (-1263), (-1263), 0.0, 4292, (Coordinate) null, true);
      CarroGasolina carroGasolina1 = carroGasolina0.clone();
      assertEquals((-1263), carroGasolina1.getVelocidade());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina("_h5$ss", "ZZ4a:L@u?2]#", "ZZ4a:L@u?2]#", (-1263), (-1263), 0.0, 4292, (Coordinate) null, true);
      // Undeclared exception!
      try { 
        carroGasolina0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.Veiculo", e);
      }
  }
}
